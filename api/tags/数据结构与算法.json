{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"postlist":[{"title":"【基础算法】关于高精度计算的问题【很高位数数据的加减乘除(相关代码用C++实现)】","uid":"48de73fbd4a7bbcd1c473c6c29503249","slug":"【基础算法】关于高精度计算的问题【很高位数数据的加减乘除-相关代码用C-实现-】","date":"2023-03-03T15:49:06.000Z","updated":"2023-03-03T15:50:14.498Z","comments":true,"path":"api/articles/【基础算法】关于高精度计算的问题【很高位数数据的加减乘除-相关代码用C-实现-】.json","keywords":null,"cover":"/photo/R-C (6).jpeg","text":"前言 当我们在利用计算机进行一些计算时，可能会遇到这类问题 ： 有些计算要求精度高，希望计算的数的位数可达几十位甚至几百位，虽然计算机的计算精度也算较高了，但因受到硬件的限制，往往达不到实际问题所要求的精度。 这时我们就可以通过程序设计来解决这类问题，例如：创建一个数组，通过数组...","link":"","photos":[],"count_time":{"symbolsCount":"8.2k","symbolsTime":"7 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":null},{"title":"【基础算法】单链表的OJ练习(2)","uid":"98becb8c7065890d0806582243945652","slug":"【基础算法】单链表的OJ练习-2-链表的中间结点-链表中倒数第k个结点","date":"2023-03-03T15:53:57.000Z","updated":"2023-03-03T15:58:34.903Z","comments":true,"path":"api/articles/【基础算法】单链表的OJ练习-2-链表的中间结点-链表中倒数第k个结点.json","keywords":null,"cover":"/photo/R-C (3).jpeg","text":"前言 对于单链表的OJ练习，需要深刻理解做题的思路，这样我们才能够在任何场景都能够熟练的解答有关链表的问题。 关于OJ练习（1）：&#x3D;&#x3D;-&gt;&#x3D;&#x3D; 传送门 &#x3D;&#x3D;&lt;-&#x3D;&#x3D;，其题目较为简单，思路也...","link":"","photos":[],"count_time":{"symbolsCount":"3.5k","symbolsTime":"3 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":true},{"title":"【数据结构】单链表","uid":"bfad240cf4f429ffe303cb01324aaae0","slug":"【数据结构】单链表","date":"2023-03-03T15:53:13.000Z","updated":"2023-03-03T15:56:22.300Z","comments":true,"path":"api/articles/【数据结构】单链表.json","keywords":null,"cover":"/photo/v2-99dff3d20928f72a1edd7aa1bebc4a21_r.jpg","text":" 前言 在学习数据结构时，单链表可谓是第一个需要跨越的台阶。 从C语言到数据结构，单链表能够真正的反映我们C语言到底学的扎不扎实，那是因为，单链表对于C语言中的指针，结构体，以及函数模块的实现有较高的要求。因此，通过本章的学习，要是能够自我实现单链表，那你的C语言功底会厚实，你的...","link":"","photos":[],"count_time":{"symbolsCount":"24k","symbolsTime":"21 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":true},{"title":"【数据结构】顺序表","uid":"acb938686160e729bc4dce5cef8311df","slug":"【数据结构】顺序表","date":"2023-03-03T15:53:00.000Z","updated":"2023-03-03T15:55:09.846Z","comments":true,"path":"api/articles/【数据结构】顺序表.json","keywords":null,"cover":"/photo/屏幕截图_20230122_043538.png","text":"前言 顺序表作为数据结构中的小小弟，还是很好应付的。说到数据结构，顺序表是我们的向导，它让你明白数据结构到底是干啥的，为啥数据结构这么的重要。 实际上，通讯录的底层就是一个顺序表，里面的增添联系人，删除联系人等一系列操作，都是基于顺序表实现的，这也侧面拖出了数据结构的作用。所以，...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":null},{"title":"【基础算法】单链表的OJ练习(1)","uid":"7ca2e84fccf5532a68e25ef3af8a8b80","slug":"【基础算法】单链表的OJ练习-1-反转链表-合并两个有序链表","date":"2023-03-03T15:53:46.000Z","updated":"2023-03-03T15:57:14.395Z","comments":true,"path":"api/articles/【基础算法】单链表的OJ练习-1-反转链表-合并两个有序链表.json","keywords":null,"cover":"/photo/R-C (4).jpeg","text":"前言 上一章讲解了单链表 &#x3D;&#x3D;-&gt;&#x3D;&#x3D; 传送门 &#x3D;&#x3D;&lt;-&#x3D;&#x3D; ，后面几章就对单链表进行一些简单的题目练习，目的是为了更好的理解单链表的实现以及加深对某些函数接口的熟练度。 本章带来了两个题...","link":"","photos":[],"count_time":{"symbolsCount":"3k","symbolsTime":"3 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":true},{"title":"【数据结构与算法】算法的时间复杂度和空间复杂度","uid":"73ff783753dfb9187579f115eb370182","slug":"【数据结构与算法】算法的时间复杂度和空间复杂度","date":"2023-03-03T15:45:47.000Z","updated":"2023-03-03T15:48:47.845Z","comments":true,"path":"api/articles/【数据结构与算法】算法的时间复杂度和空间复杂度.json","keywords":null,"cover":"/photo/屏幕截图_20230122_043306.png","text":" 前言 关于时空复杂度的分析，是每一个程序员的必备技能，本文将带你了解什么是时空复杂度？熟知怎样去计算一个算法的时间复杂度和空间复杂度。 1.算法效率1.1.如何衡量一个算法的好坏如何衡量一个算法的好坏呢？我们先看一段代码： int Fib(int N) &#123; if(N ...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":null}]}