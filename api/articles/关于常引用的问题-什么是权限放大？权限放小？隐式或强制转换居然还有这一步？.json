{"title":"关于常引用的问题","uid":"53f3e274c7bda3bde7e9b295614179bc","slug":"关于常引用的问题-什么是权限放大？权限放小？隐式或强制转换居然还有这一步？","date":"2023-02-18T06:45:14.000Z","updated":"2023-02-18T06:54:00.841Z","comments":true,"path":"api/articles/关于常引用的问题-什么是权限放大？权限放小？隐式或强制转换居然还有这一步？.json","keywords":null,"cover":"/photo/屏幕截图_20230122_040600.png","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>引用</code>在<code>c++</code>中的使用非常常见，可以说是很重要的，<code>引用</code>的<code>常引用</code>相关的问题让很多人稍不留神就出错了，这里我们就来谈谈<code>常引用</code>的问题。</p></blockquote>\n<h1 id=\"关于权限\"><a href=\"#关于权限\" class=\"headerlink\" title=\"关于权限\"></a>关于权限</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><ul>\n<li>关于权限有<code>权限缩小</code>和<code>权限放大</code>的问题，比如一个文件，当初它只有<code>读</code>的权限，而现在你给它再加个<code>写</code>的权限，这就是<code>权限放大</code>；又或当初它<code>读，写</code>的权限都有，但你把他某个权限或所有权限都限制了，这就是<code>权限缩小</code>。</li>\n<li>在<code>指针</code>和<code>引用</code>赋值中，权限<code>可以缩小</code>，但<code>不可以放大</code>：这里通常指的是变量的值可不可以改的问题，如果说是从改到不能改，这就是将权限缩小了，这是可行的；如果说是从不能改到能改，这就是权限放大了，此时是不行的。 </li>\n<li>而引用相当于<code>起别名</code>，对于这个别名的权限相对于本名变量有什么变化，这需要自己来决定。当自己决定别名的权限之后（<code>不能与第二点表达的起冲突</code>），对它的使用就要<code>留个心眼</code>。</li>\n</ul></blockquote>\n<h1 id=\"关于引用与const\"><a href=\"#关于引用与const\" class=\"headerlink\" title=\"关于引用与const\"></a>关于引用与const</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p><code>const</code>通常就是用来限制变量可以改，也就是这个变量的值不能被修改，结合上面的权限问题，我们来看以下例子：</p></blockquote>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">1.\nint a &#x3D; 10;\nconst int&amp; ra &#x3D; a;  &#x2F;&#x2F; ??\nint&amp; raa &#x3D; ra;  &#x2F;&#x2F; ??\n\n2.\nconst int b &#x3D; 20;\nint&amp; rb &#x3D; b;  &#x2F;&#x2F; ??\nconst int&amp; rrb &#x3D; b;  &#x2F;&#x2F; ??</code></pre>\n\n\n<ul>\n<li><p>对于上述代码的第一种情况：  </p>\n<ol>\n<li>关于<code>ra</code>，<code>ra</code>是<code>a</code>的别名，并且被<code>const</code>修饰，此时<code>ra</code>的值是不能被修改的（要注意，这里单指<code>ra</code>，只是说不能使用<code>ra</code>对<code>a</code>的值进行修改，使用<code>a</code>修改值还是可以的，注意是单指<code>ra</code>这个别名），由<code>a</code>到<code>ra</code>，很明显改的权限没了，属于<code>权限变小</code>，是可行的。</li>\n<li>关于<code>rra</code>，<code>rra</code>是<code>ra</code>的别名，也就是<code>a</code>的别名的别名，本质还是一样的，只不过说，<code>rra</code>是相对于<code>ra</code>起的别名，<code>ra</code>的权限不能改，而<code>rra</code>前面没有<code>const</code>（能读能改），所以由<code>ra</code>到<code>rra</code>属于<code>权限放大</code>，是不可行的。</li>\n</ol>\n</li>\n<li><p>对于上述代码的第二种情况：</p>\n<ol>\n<li>关于\t<code>rb</code>\t，<code>rb</code>是<code>b</code>的别名，<code>b</code>前面使用了<code>const</code>修饰，说明它不能被修改，而<code>rb</code>前面没有<code>const</code>，说明可读可改，属于<code>权限放大</code>，是不可行的。</li>\n<li>关于<code>rrb</code>，<code>rrb</code>也是<code>b</code>的别名，<code>b</code>前面使用了<code>const</code>修饰，<code>rrb</code>前面也使用了<code>const</code>修饰，<code>权限没有变</code>，当然可行。</li>\n</ol>\n</li>\n</ul>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>当我们在使用引用的时候，若是有const出现，那一定要注意权限的问题，不然程序写完一运行全是问题。</p></blockquote>\n<h1 id=\"关于那秘密的一步\"><a href=\"#关于那秘密的一步\" class=\"headerlink\" title=\"关于那秘密的一步\"></a>关于那秘密的一步</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这秘密的一步还是与权限有关，居然是与权限有关，那么指向的对象就只有指针和引用了。</p></blockquote>\n<p>对于这<code>秘密</code>的一步，我们先来看以下例子：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">\tdouble b &#x3D; 13.14;\n\n&#x2F;&#x2F;1.\n\tint a &#x3D; b;  &#x2F;&#x2F; 隐式类型转换\n\tint c &#x3D; (int)b;  &#x2F;&#x2F; 强制类型转换\n\n&#x2F;&#x2F;2.\n\t&#x2F;&#x2F; 2.1. &#x2F;&#x2F; 隐式类型转换\n\tint&amp; rb &#x3D; b;   &#x2F;&#x2F; 出错   \n\tconst int&amp; rrb &#x3D; b;\n\t&#x2F;&#x2F; 2.2.  &#x2F;&#x2F; 强制类型转换\n\tint&amp; rrrb &#x3D; (int)b;   &#x2F;&#x2F; 出错\n\tconst int&amp; rrrrb &#x3D; (int)b;</code></pre>\n\n<ul>\n<li>情况<code>1</code>：对于情况<code>1</code>，据前面的概念，变量<code>a</code>和<code>c</code>既不是<code>指针</code>也不是<code>引用</code>，所以这里当然是可行的。</li>\n<li>情况<code>2</code>：<br>   <code>2.1</code>：  <code> rb</code>是<code>b</code>的别名，只不过<code>rb</code>的类型是<code>（int）</code>,<code>b</code>的类型是<code>（double）</code>，所以<code>b</code>发生了<code>隐式类型转换</code>，那么这里为什么会出错呢？就是因为那秘密的一步：<font color=blue size=5>b的隐式类型转换，转换后的值会先交给一个临时变量tmp（此时tmp变为13），而语法规定，这个tmp是一个常量，当tmp的值再交给rb时，rb是一个别名，前面没有const修饰，具有改的权限，所以这里权限是放大了的，是不可行的。也因此这里会出错。</font>而下一条语句，<code>rrb</code>前面有<code>const</code>修饰，所以没有出错。<br><code>2.2</code>：有了<code>2.1</code>的铺垫，实际上强转不强转的无所谓，最终还是归咎到有关<code>const</code>的<code>权限问题</code>，所以要理解那个<code>tmp</code>，也因此这里的<code>rrrb</code>会出错。</li>\n</ul>\n<p>当然，对于函数调用，也有相关问题：</p>\n<pre class=\"line-numbers language-cpp\" data-language=\"cpp\"><code class=\"language-cpp\">1.\nvoid fun(int&amp; rb)  &#x2F;&#x2F; 权限放大，不行\n&#123;\n\tcout &lt;&lt; rb &lt;&lt; endl;\n&#125;\n\ndouble b &#x3D; 13.14;\nfun(b); &#x2F;&#x2F; 隐式类型转换交给一个临时变量，这个临时变量是常量\n\n2.\nvoid fun(const int&amp; rb)  &#x2F;&#x2F; 权限不变，可行\n&#123;\n\tcout &lt;&lt; rb &lt;&lt; endl;\n&#125;\n\ndouble b &#x3D; 13.14;\nfun(b); &#x2F;&#x2F; 隐式类型转换交给一个临时变量，这个临时变量是常量</code></pre>\n\n<ul>\n<li><p>无论是函数的传参还是返回，都存在那个临时变量的问题，规定了临时变量是一个常量，那就要小心这个点带来的问题。</p>\n</li>\n<li><p>对于<code>1，2</code>，关注的点还是一样的，都是围绕一个<code>权限</code>的问题，所以当我们在对函数<code>传参</code>或者是<code>接收函数返回值</code>的时候，要注意要不要加<code>const</code>，这样才能在小的细节上不会出错。</p>\n</li>\n</ul>\n<h1 id=\"写在最后\"><a href=\"#写在最后\" class=\"headerlink\" title=\"写在最后\"></a>写在最后</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>最后还是要强调，关于本章内容，一定要清楚，不能搞混，谁知道在以后写代码的时候会不会出类似错误呢？而一旦出现此类的问题，那就很难受了。可能一时半会都想不清楚到底是哪出了问题。</p></blockquote>\n<p><strong>感谢阅读本小白的博客，错误的地方请严厉指出噢！</strong></p>\n","text":"前言 引用在c++中的使用非常常见，可以说是很重要的，引用的常引用相关的问题让很多人稍不留神就出错了，这里我们就来谈谈常引用的问题。 关于权限 关于权限有权限缩小和权限放大的问题，比如一个文件，当初它只有读的权限，而现在你给它再加个写的权限，这就是权限放大；又或当初它读，写的权限...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"C++阶段相关知识点与问题的深度解析","slug":"C-阶段相关知识点与问题的深度解析","count":1,"path":"api/categories/C-阶段相关知识点与问题的深度解析.json"}],"tags":[{"name":"C++","slug":"C","count":1,"path":"api/tags/C.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E6%9D%83%E9%99%90\"><span class=\"toc-text\">关于权限</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E5%BC%95%E7%94%A8%E4%B8%8Econst\"><span class=\"toc-text\">关于引用与const</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%85%B3%E4%BA%8E%E9%82%A3%E7%A7%98%E5%AF%86%E7%9A%84%E4%B8%80%E6%AD%A5\"><span class=\"toc-text\">关于那秘密的一步</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%86%99%E5%9C%A8%E6%9C%80%E5%90%8E\"><span class=\"toc-text\">写在最后</span></a></li></ol>","author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"【数据结构与算法】算法的时间复杂度和空间复杂度","uid":"73ff783753dfb9187579f115eb370182","slug":"【数据结构与算法】算法的时间复杂度和空间复杂度","date":"2023-03-03T15:45:47.000Z","updated":"2023-03-03T15:48:47.845Z","comments":true,"path":"api/articles/【数据结构与算法】算法的时间复杂度和空间复杂度.json","keywords":null,"cover":"/photo/屏幕截图_20230122_043306.png","text":" 前言 关于时空复杂度的分析，是每一个程序员的必备技能，本文将带你了解什么是时空复杂度？熟知怎样去计算一个算法的时间复杂度和空间复杂度。 1.算法效率1.1.如何衡量一个算法的好坏如何衡量一个算法的好坏呢？我们先看一段代码： int Fib(int N) &#123; if(N ...","link":"","photos":[],"count_time":{"symbolsCount":"7.5k","symbolsTime":"7 mins."},"categories":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/categories/数据结构与算法.json"}],"tags":[{"name":"数据结构与算法","slug":"数据结构与算法","count":6,"path":"api/tags/数据结构与算法.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":null},"next_post":{"title":"C语言预处理相关知识的介绍和解析","uid":"10386f8dcb44ec1bbe05b4072762a00e","slug":"C语言预处理相关知识的介绍和解析","date":"2023-02-18T06:43:28.000Z","updated":"2023-02-18T06:54:28.828Z","comments":true,"path":"api/articles/C语言预处理相关知识的介绍和解析.json","keywords":null,"cover":"/photo/屏幕截图_20230122_044157.png","text":" 前言 上篇文章介绍了一个程序运行的 编译与链接 ，其中编译阶段有个预处理，他会对一些预处理指令进行处理，本章就对这些预处理相关的指令，操作符等等进行探讨。 预定义符号介绍 这里介绍一些可能会常用到的符号： __FILE__ &#x2F;&#x2F;进行编译的源文件 __LINE...","link":"","photos":[],"count_time":{"symbolsCount":"7.7k","symbolsTime":"7 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}}}