{"title":"C语言指针练级攻略初级篇（2）","uid":"96e78203404f7982dd071e85a86cfcc4","slug":"C语言指针练级攻略初级篇（2）","date":"2023-02-17T15:32:59.000Z","updated":"2023-02-17T15:33:36.548Z","comments":true,"path":"api/articles/C语言指针练级攻略初级篇（2）.json","keywords":null,"cover":[],"content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>紧跟上一章，这一章的指针相对较难一些，不过经过本章的学习，相信大家能够有所得</p></blockquote>\n<h1 id=\"一-二级指针\"><a href=\"#一-二级指针\" class=\"headerlink\" title=\"一.二级指针\"></a>一.二级指针</h1><ul>\n<li>上一章说的都是一级指针的应用，那么什么是二级指针呢？</li>\n<li>我们都知道，创建一个变量是需要在内存中开辟一个地址空间来存放的，那么指针（指针就是指针变量）也是如此，他也是一个变量，他也需要一个地址内存空间来存放，只不过这个空间放的是其他变量的地址。</li>\n<li><strong>实际上，二级指针可以理解为就是指针的指针，也就是说，二级指针里放的是一级指针的地址</strong>。</li>\n<li><strong>我们创建一个整型变量给个初始值，再将这个变量的地址交给一个指针变量，然后将这个指针的地址再传给另一个指针，那么这个指针就叫做二级指针</strong>。</li>\n</ul>\n<p>我们看以下代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int a &#x3D; 10; &#x2F;&#x2F; 创建一个变量a，他需要在内存中占有一段空间\nint* pa &#x3D; &amp;a; &#x2F;&#x2F; pa为指针变量，他也需要一段空间来存放，但他里面放的是a的地址\nint** ppa &#x3D; &amp;pa; &#x2F;&#x2F; 同理，它里面放的是pa这个指针的地址</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/2f34b122bef341c3b520c4b225e9cdf5.png#pic_center\" alt=\"在这里插入图片描述\"><br><img src=\"https://img-blog.csdnimg.cn/5dbbe0e1d75748d1940fb0a7c7b9f02a.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<p>》》 <strong>那么我们如何使用二级指针呢？</strong></p>\n<ul>\n<li>由上述代码，我们都知道，对一级指针解引用操作可以找到a的值，并且能够修改a里面的值，同样的。对ppa解引用就能找到a的地址，因为指针变量pa存放的是a的地址，如下：</li>\n</ul>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nint main()\n&#123;\n\tint a &#x3D; 10;\n\tint* pa &#x3D; &amp;a;\n\tint** ppa &#x3D; &amp;pa;\n\n\tprintf(&quot;%p\\n&quot;, &amp;a);\n\tprintf(&quot;%p\\n&quot;, pa);\n\tprintf(&quot;%d\\n&quot;, *pa);\n\n\tprintf(&quot;%p\\n&quot;, &amp;pa);\n\tprintf(&quot;%p\\n&quot;, ppa); &#x2F;&#x2F; ppa就是pa的地址\n\tprintf(&quot;%p\\n&quot;, *ppa); &#x2F;&#x2F; 对ppa解引用找到的是a的地址，因为pa里面存放的是a的地址\n\n\treturn 0;\n&#125;</code></pre>\n\n<p><img src=\"https://img-blog.csdnimg.cn/9a87b8ad997741ac817b46aa24a991dd.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li>也就是说通过对ppa两次的解引用，我们可以找到a的值：</li>\n</ul>\n<p><img src=\"https://img-blog.csdnimg.cn/50ab5f437a0a4b3b9c9309eb11f1b993.png#pic_center\" alt=\"在这里插入图片描述\"></p>\n<ul>\n<li><strong><em>ppa的解引用过程：一次解引用找到的是a的地址，因为ppa是指向int</em> 类型的指针，他指向int型的指针变量pa，而pa里面存放的是a的地址。二次解引用便通过a的地址找到a的值。</strong></li>\n</ul>\n<h1 id=\"二-指针数组\"><a href=\"#二-指针数组\" class=\"headerlink\" title=\"二.指针数组\"></a>二.指针数组</h1><ul>\n<li>指针数组他是数组还是指针呢？？？</li>\n<li>当然是数组。</li>\n<li>数组里的元素放的是指针，那这个数组就是指针数组。</li>\n</ul>\n<p>例如：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">int* arr[3] &#x3D; &#123;0&#125;;</code></pre>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>arr是一个指针数组，他里面放了三个指针，每个指针是指向int类型的指针。</p></blockquote>\n<p>那么我们如何使用二维数组，下面展示一个比较能够体现其作用的代码：</p>\n<pre class=\"line-numbers language-c\" data-language=\"c\"><code class=\"language-c\">#include &lt;stdio.h&gt;\n\nint main()\n&#123;\n\tint a[4] &#x3D; &#123; 1,2,3,4 &#125;;\n\tint b[4] &#x3D; &#123; 5,6,7,8 &#125;;\n\tint c[4] &#x3D; &#123; 9,10,11,12 &#125;;\n\tint* arr[3] &#x3D; &#123; a,b,c &#125;;\n\n\tint i &#x3D; 0;\n\tint j &#x3D; 0;\n\n\tfor (i &#x3D; 0; i &lt; 3; i++)\n\t&#123;\n\t\tfor (j &#x3D; 0; j &lt; 4; j++)\n\t\t&#123;\n\t\t\tprintf(&quot;%-2d &quot;, *(arr[i] + j)); &#x2F;&#x2F; arr[i][j] &#x3D;&#x3D;  *(arr[i] + j)\n\t\t&#125;\n\t\tprintf(&quot;\\n&quot;);\n\t&#125;\n\n\treturn 0;\n&#125;</code></pre>\n\n\n<ul>\n<li>可以看到，指针数组arr里面有三个指针，他们分别指向数组a的首元素地址，数组b的首元素地址，数组c的首元素地址，后面我们相继打印每个数组的内容，我们利用  *(arr[i] + j) 来寻找到每个数组对应下标的内容，arr[i]表示找到指针数组对应下标的指针指向的首元素地址，+j表示指针偏移找到该数组后面的元素的地址，对整体解引用则为该指针对应的数组的对应下标的值。</li>\n</ul>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>指针初阶就到这里，想必大家对指针的认识已有不少。我们都知道，灵活的利用指针可以大大提高程序的效率，所以这里我们需要针对性的练习来提高我们对指针的敏感度。</p></blockquote>\n","feature":true,"text":"前言 紧跟上一章，这一章的指针相对较难一些，不过经过本章的学习，相信大家能够有所得 一.二级指针 上一章说的都是一级指针的应用，那么什么是二级指针呢？ 我们都知道，创建一个变量是需要在内存中开辟一个地址空间来存放的，那么指针（指针就是指针变量）也是如此，他也是一个变量，他也需要一...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[],"tags":[{"name":"C语言","slug":"C语言","count":10,"path":"api/tags/C语言.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80-%E4%BA%8C%E7%BA%A7%E6%8C%87%E9%92%88\"><span class=\"toc-text\">一.二级指针</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%BA%8C-%E6%8C%87%E9%92%88%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">二.指针数组</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"坏 幸 运","slug":"blog-author","avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.0bab160015bf9e56450d5fded33bd448?rik=VFMstq3mAZG1pg&riu=http%3a%2f%2fwww.qzqn8.com%2fwp-content%2fuploads%2f2020%2f02%2f3-9.jpg&ehk=pnkhUlGCDYmxisEuCwYL4zXW92froAxt%2f0B5i9AYAkY%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"程序员最需要的技术-调试（代码均C语言为例）","uid":"d7ca3649cd79eeb226e0042c9923bb21","slug":"程序员最需要的技术-调试（代码均C语言为例）","date":"2023-02-17T15:35:31.000Z","updated":"2023-02-17T15:56:08.729Z","comments":true,"path":"api/articles/程序员最需要的技术-调试（代码均C语言为例）.json","keywords":null,"cover":"/photo/p1.png","text":"世界上第一个bug 第一次被发现的导致计算机错误的飞蛾，也是第一个计算机程序错误。 这只飞蛾就引生出了bug的概念。 bug是在应用程序投入生产之前发现的错误。 导致程序工作不佳、生产错误结果或崩溃的编程错误。 1.学会调试很重要1.1 调试是什么？ 调试（英语：Debuggin...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[],"tags":[{"name":"C语言","slug":"C语言","count":10,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.0bab160015bf9e56450d5fded33bd448?rik=VFMstq3mAZG1pg&riu=http%3a%2f%2fwww.qzqn8.com%2fwp-content%2fuploads%2f2020%2f02%2f3-9.jpg&ehk=pnkhUlGCDYmxisEuCwYL4zXW92froAxt%2f0B5i9AYAkY%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"C语言指针练级攻略初级篇（1）","uid":"2aa79aad05ade9ad90a236a03dfb831e","slug":"C语言指针练级攻略初级篇（1）","date":"2023-02-17T15:30:00.000Z","updated":"2023-02-17T15:31:24.732Z","comments":true,"path":"api/articles/C语言指针练级攻略初级篇（1）.json","keywords":null,"cover":[],"text":"前言 C语言中指针可以说是最接近计算机的一种表达方式了，他是C语言中最难也最重要的一块，这就需要我们细心去学去体会指针的每一步效果，相信大家刚学指针时会有些许困惑，本章我们就来看看指针的初阶把。 1.指针是什么？ 指针是一个值为内存地址的变量； 指针提供一种以符号的形式使用地址的...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[],"tags":[{"name":"C语言","slug":"C语言","count":10,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"https://ts1.cn.mm.bing.net/th/id/R-C.0bab160015bf9e56450d5fded33bd448?rik=VFMstq3mAZG1pg&riu=http%3a%2f%2fwww.qzqn8.com%2fwp-content%2fuploads%2f2020%2f02%2f3-9.jpg&ehk=pnkhUlGCDYmxisEuCwYL4zXW92froAxt%2f0B5i9AYAkY%3d&risl=&pid=ImgRaw&r=0&sres=1&sresct=1","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}}}