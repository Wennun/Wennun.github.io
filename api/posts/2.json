{"total":31,"pageSize":12,"pageCount":3,"data":[{"title":"关于C语言对文件的操作","uid":"c2996624a24a0b1686f1aaf8ff1ca6e4","slug":"关于C语言对文件的操作","date":"2023-02-18T06:38:53.000Z","updated":"2023-02-18T06:40:40.114Z","comments":true,"path":"api/articles/关于C语言对文件的操作.json","cover":"/photo/屏幕截图_20230218_121321.png","text":"前言 相信大家对文件都不陌生，我们在计算机的一系列操作都离不开文件，如果Linux没有了文件，那他就不叫Linux了，有了文件，我们的计算机才能够正常运行，有了文件我们才能够在计算机上写东西并能够帮我们保存下来。 C语言也提供了一系列的函数来操控文件，本篇文章只介绍那些常见和常用...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"C语言一个特殊的数组【柔性数组】","uid":"c624797c7b313fdd30471a2503f8d11d","slug":"C语言一个特殊的数组【柔性数组】","date":"2023-02-18T06:29:28.000Z","updated":"2023-02-18T06:30:24.629Z","comments":true,"path":"api/articles/C语言一个特殊的数组【柔性数组】.json","cover":"/photo/OIP-C.jpeg","text":"前言 也许你从来就没有听过柔性数组（flexible array）这个概念，但他是真的存在； 柔性数组的概念存在于C99标准当中，C99标准表示：结构体的最后一个成员可以是一个大小不确定的数组，这个数组就叫做柔性数组; 既然搭配了柔性这一修饰词，那么这个数组就不会是”耿直“的了。...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"关于C语言atoi函数的解析使用与自我实现","uid":"81fc7805ca264e2858b2ea302671831d","slug":"关于C语言atoi函数的解析使用与自我实现","date":"2023-02-18T06:24:52.000Z","updated":"2023-02-18T06:26:42.649Z","comments":true,"path":"api/articles/关于C语言atoi函数的解析使用与自我实现.json","cover":"/photo/202322.jpg","text":"前言 对于atoi函数大家可能会有些陌生，不过当你选择并阅读到这里时，请往下阅读，我相信你能对atoi函数熟悉 该函数的头文件为 &lt;stdlib.h&gt; 或 &lt;cstdlib&gt; atoi函数的介绍此函数的功能是将数字字符的字符串转化为字面上的整型返回，例如：...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"关于C语言自定义类型的解析【联合体(共用体)】","uid":"77f0175d7a55a3daaea7f2a65478b692","slug":"关于C语言自定义类型的解析【联合体-共用体-】","date":"2023-02-18T06:10:00.000Z","updated":"2023-02-18T06:12:40.980Z","comments":true,"path":"api/articles/关于C语言自定义类型的解析【联合体-共用体-】.json","cover":"/photo/屏幕截图_20230122_043346.png","text":"前言 联合体（union）在C语言中是不常用的，不过存在就必然有其有用之处，这里不深入探讨联合体用在何处有什么用，本文章只介绍关于union的基本知识。 联合体(UNION)类型的定义 联合体也是一种特殊的自定义类型, 这种类型定义的变量也包含一系列的成员，特征是这些成员共用同一...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"关于C语言自定义类型的解析【枚举】","uid":"2a6f3763c677ea77f93b81ce5ed42b63","slug":"关于C语言自定义类型的解析【枚举】","date":"2023-02-18T06:03:06.000Z","updated":"2023-02-18T06:09:30.560Z","comments":true,"path":"api/articles/关于C语言自定义类型的解析【枚举】.json","cover":"/photo/屏幕截图_20230122_044410.png","text":"前言 枚举在我们平时练习或学习的时候可能不是很常用，但是其在工程项目里，还是比较常见的，因为他能起到优化用。并且，有时我们在写题的时候，也会运用到枚举的思想。 枚举的介绍 枚举顾名思义就是 一 一 列举。把可能的取值 一 一 列举。 比如我们现实生活中：1.一个星期从星期一到星期...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"关于C语言自定义类型的解析【结构体】","uid":"4134eec542bd62238a7d449186ff9c26","slug":"关于C语言自定义类型的解析【结构体】","date":"2023-02-18T04:17:55.000Z","updated":"2023-02-18T04:21:27.872Z","comments":true,"path":"api/articles/关于C语言自定义类型的解析【结构体】.json","cover":"/photo/屏幕截图_20230122_043921.png","text":"前言 C语言中结构体是一种用户自定义的数据类型，它相当于一个小型的数据结构，当我们在学数据结构阶段的时候，结构体的运用很常见，所以，基本的结构体的定义和使用，以及结构体大小的计算务必掌握。 结构体类型的声明 结构体的基础知识： 结构是一些值的集合，这些值称为成员变量。结构的每个成...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"C语言常见字符串函数的解析和部分字符串函数的实现","uid":"19cad4ee9072e8ab86cabc2b83a8e850","slug":"C语言常见字符串函数的解析和部分字符串函数的实现","date":"2023-02-18T04:01:12.000Z","updated":"2023-02-18T04:03:06.381Z","comments":true,"path":"api/articles/C语言常见字符串函数的解析和部分字符串函数的实现.json","cover":"/photo/p55.jpeg","text":"前言 常见的字符串函数在一定程度上可以让我们在写代码，或者是在刷某些有关字符串的题目时事半功倍，并且常见字符串函数的功能非常常用，因此我们应该熟练使用这些字符串函数，以及部分函数要能自我实现。 字符串函数都要引入一个库函数：string(#include &lt;string.h...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"GO语言基本数据类型","uid":"43e2ee3df951b9743f1edd51428d3b1f","slug":"GO语言基本数据类型","date":"2023-02-18T03:54:57.000Z","updated":"2023-02-18T03:56:21.159Z","comments":true,"path":"api/articles/GO语言基本数据类型.json","cover":"/photo/p7.jpg","text":"1.整数类型 整数类型就是存放整数的，如18 ，-18，123534等，在GO语言中，几乎不同于其它语言，以字节的视角来看其int类型还分为不同的int表达，首先int还要分为两大类。 1.1.有符号整数类型 有符号就是整数有正负之分 我们来看下图：可以看到，这4个int后面都带...","link":"","photos":[],"count_time":{"symbolsCount":"10k","symbolsTime":"9 mins."},"categories":[{"name":"GO语言相关知识的深度解析","slug":"GO语言相关知识的深度解析","count":1,"path":"api/categories/GO语言相关知识的深度解析.json"}],"tags":[{"name":"GO语言","slug":"GO语言","count":1,"path":"api/tags/GO语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"深度解析数据在内存中的存储","uid":"daac20e59d5dd80457865681aac90392","slug":"深度解析数据在内存中的存储","date":"2023-02-18T03:46:23.000Z","updated":"2023-02-18T03:49:26.069Z","comments":true,"path":"api/articles/深度解析数据在内存中的存储.json","cover":"/photo/p5.jpeg","text":"1. 数据类型详细介绍 char // 字符数据类型short // 短整型int // 整型 long // 长整型long long // 更长的整型float // 单精度浮点数double // 双精度浮点数 1.1.类型的基本归类1.整型家族char unsigned ...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"C语言指针练级攻略进阶级","uid":"2e8c8f6bc22dd0fcb7353812a2e08717","slug":"C语言指针练级攻略进阶级","date":"2023-02-17T16:04:46.000Z","updated":"2023-02-18T02:58:23.713Z","comments":true,"path":"api/articles/C语言指针练级攻略进阶级.json","cover":"/photo/p4.png","text":"1. 字符指针 字符指针顾名思义是指向字符的指针，如 char* p &#x3D; a(字符数组)。 如下：char a[] &#x3D; “abcdef”;char* p1 &#x3D; a;char* p2 &#x3D; “abcdef”; p1是一个字符指针，它指向的是a字...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"程序员最需要的技术-调试（代码均C语言为例）","uid":"d7ca3649cd79eeb226e0042c9923bb21","slug":"程序员最需要的技术-调试（代码均C语言为例）","date":"2023-02-17T15:35:31.000Z","updated":"2023-02-18T02:58:19.982Z","comments":true,"path":"api/articles/程序员最需要的技术-调试（代码均C语言为例）.json","cover":"/photo/p1.png","text":"世界上第一个bug 第一次被发现的导致计算机错误的飞蛾，也是第一个计算机程序错误。 这只飞蛾就引生出了bug的概念。 bug是在应用程序投入生产之前发现的错误。 导致程序工作不佳、生产错误结果或崩溃的编程错误。 1.学会调试很重要1.1 调试是什么？ 调试（英语：Debuggin...","link":"","photos":[],"count_time":{"symbolsCount":"3.2k","symbolsTime":"3 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}},{"title":"C语言指针练级攻略初级篇（2）","uid":"96e78203404f7982dd071e85a86cfcc4","slug":"C语言指针练级攻略初级篇（2）","date":"2023-02-17T15:32:59.000Z","updated":"2023-02-18T02:58:28.168Z","comments":true,"path":"api/articles/C语言指针练级攻略初级篇（2）.json","cover":[],"text":"前言 紧跟上一章，这一章的指针相对较难一些，不过经过本章的学习，相信大家能够有所得 一.二级指针 上一章说的都是一级指针的应用，那么什么是二级指针呢？ 我们都知道，创建一个变量是需要在内存中开辟一个地址空间来存放的，那么指针（指针就是指针变量）也是如此，他也是一个变量，他也需要一...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"C语言相关知识的深度解析","slug":"C语言相关知识的深度解析","count":23,"path":"api/categories/C语言相关知识的深度解析.json"}],"tags":[{"name":"C语言","slug":"C语言","count":23,"path":"api/tags/C语言.json"}],"author":{"name":"坏 幸 运","slug":"blog-author","avatar":"/photo/微信图片_20230209190414.jpg","link":"/","description":"Believe in yourself, you can do it --- <Learn from each other> WX-xmdx99999999","socials":{"github":"https://github.com/Wennun/Wennun.github.io","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/Wennytime","juejin":"","customs":{}}}}]}